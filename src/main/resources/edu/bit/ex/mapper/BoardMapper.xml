<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="edu.bit.ex.mapper.BoardMapper">
	<!-- 페이징을 적용한 공지사항 게시판 리스트 -->
	<select id="getNoticeListWithPaging" resultType="edu.bit.ex.vo.BoardVO">
		<![CDATA[
			SELECT * FROM (
			     SELECT ROWNUM AS RNUM, A.* FROM ( 
			        		SELECT * 
			                FROM board 
			                WHERE board_type_number = 1 
			                ORDER BY board_id DESC, board_date DESC 
			    ) A WHERE ROWNUM <= #{pageNum} * #{amount} 
			) WHERE RNUM > (#{pageNum}-1) * #{amount}
		]]>
	</select>
	
	<!-- 페이징 단위에 적용되는 최대 공지 게시글 단위 -->
	<select id="getNoticeTotalCount" resultType="int">
	<![CDATA[
		SELECT COUNT(*) FROM board WHERE board_type_number = 1
	]]>	
	</select>
	
	<!-- 공지사항 작성 id 가져오기(스프링 시큐리티때 수정할것) -->
	<select id="getNoticeMember" resultType="edu.bit.ex.vo.MbrVO">
	<![CDATA[
		SELECT * FROM mbr WHERE mbr_id = 'abcd1234'
	]]>
	</select>
	
	<!-- 공지사항 작성 -->
	<insert id="setNoticeWrite" >
	<![CDATA[
		INSERT INTO board (board_id, board_name, board_content, mbr_id, board_type_number, inquiry_number, prdct_id, order_number, board_like, board_hit) 
		VALUES (board_seq.nextval, #{board_name}, #{board_content}, #{mbr_id}, 1, 1, 'PRDCT34', 23, 0, 0) 
	]]>
	</insert>
	
	<!-- 공지사항 게시글 -->
	<select id="getNoticeContent" resultType="edu.bit.ex.vo.BoardVO">
	<![CDATA[
		SELECT * FROM board WHERE board_id = #{board_id}
	]]>
	</select>
	
	<!-- 공지사항 삭제 -->
	<delete id="noticeRemove">
	<![CDATA[
		DELETE FROM board WHERE board_id = #{board_id}
	]]>
	</delete>
	
	<!-- 공지사항 수정 -->
	<update id="setNoticeModify">
	<![CDATA[
		UPDATE board SET board_name = #{board_name}, board_content = #{board_content} WHERE board_id = #{board_id}
	]]>
	</update>
	
	<!-- 매거진 게시판 썸네일 -->
	<select id="getMagazineThumbnail" resultType="edu.bit.ex.joinvo.BoardPrdctImageVO">
		<![CDATA[
			SELECT ROWNUM, p.image_name, b.board_id, p.board_id 
			FROM prdct_image p, board b 
			WHERE p.board_id = b.board_id AND 
			    ROWNUM = 1 AND 
			    #{board_id} = #{board_id}
		]]>
	</select>
	
	<!-- 페이징을 적용한 매거진 게시판 리스트 -->
	<select id="getMagazineListWithPaging" resultType="edu.bit.ex.joinvo.BoardPrdctImageVO">
		<![CDATA[
			SELECT * FROM (
			     SELECT ROWNUM AS RNUM, A.* FROM ( 
			        		SELECT b.board_id, b.board_name, b.board_date, b.board_like, b.board_hit, p.image_name 
							FROM board b, prdct_image p 
							WHERE b.board_id = p.board_id AND 
							    b.board_type_number = 2 AND 
							    p.image_number IN (SELECT MIN(image_number) 
							                       FROM prdct_image 
							                       GROUP BY board_id) 
							ORDER BY board_id DESC, board_date DESC
			    ) A WHERE ROWNUM <= #{pageNum} * #{amount} 
			) WHERE RNUM > (#{pageNum}-1) * #{amount}
		]]>
	</select>
	
	<!-- 페이징 단위에 적용되는 최대 매거진 게시글 단위 -->
	<select id="getMagazineTotalCount" resultType="int">
	<![CDATA[
		SELECT COUNT(*) FROM board WHERE board_type_number = 2
	]]>	
	</select>
	
	<!-- 매거진 작성 id 가져오기(스프링 시큐리티때 수정할것) -->
	<select id="getMagazineMember" resultType="edu.bit.ex.vo.MbrVO">
	<![CDATA[
		SELECT * FROM mbr WHERE mbr_id = 'abcd1234'
	]]>
	</select>
	
	<!-- 매거진 작성 -->
	<insert id="setMagazineWrite" >
	<![CDATA[
		INSERT INTO board (board_id, board_name, board_content, mbr_id, board_type_number, inquiry_number, prdct_id, order_number, board_like, board_hit) 
		VALUES (board_seq.nextval, #{board_name}, #{board_content}, #{mbr_id}, 2, 1, 'PRDCT34', 23, 0, 0) 
	]]>
	</insert>	
	
	<!-- 매거진 게시글 -->
	<select id="getMagazineContent" resultType="edu.bit.ex.vo.BoardVO">
	<![CDATA[
		SELECT * FROM board WHERE board_id = #{board_id}
	]]>
	</select>
	
	<!-- 매거진 게시글 조회 -->
	<update id="upMagazineHit">
	<![CDATA[
		UPDATE board SET board_hit = board_hit+1 WHERE board_id = #{board_id}
	]]>
	</update>
	
	<!-- 매거진 게시글 이미지 리스트 -->
	<resultMap id="magazineContentImageMap" type="edu.bit.ex.vo.PrdctImageVO">
	    <result property="image_number" column="image_number"/>
	    <result property="image_name" column="image_name"/>
	    <result property="image_path" column="image_path"/>
		<collection property="board_id" resultMap="magazineContentMap"></collection>
	</resultMap>	
	<resultMap id="magazineContentMap" type="edu.bit.ex.vo.BoardVO">
		<result property="board_id" column="board_id"/>
	</resultMap>
	<select id="getMagazineImage" resultMap="magazineContentImageMap">
		SELECT p.image_name 
		FROM prdct_image p, board b 
		WHERE p.board_id = b.board_id AND 
		    b.board_id = #{board_id} 
		ORDER BY p.image_number ASC
	</select>
	
	<!-- 매거진 게시글 추천 -->
	<update id="magazineUpLike">
	<![CDATA[
		UPDATE board SET board_like = board_like+1 WHERE board_id = #{board_id}
	]]>
	</update>
	
	<!-- 매거진 게시글 댓글 리스트 -->
	<resultMap id="magazineContentCommentMap" type="edu.bit.ex.joinvo.BoardBoardCommentVO">
	    <result property="board_id" column="comment_id"/>
	    <result property="comment_id" column="comment_id"/>
	    <result property="comment_content" column="comment_content"/>
	    <result property="comment_date" column="comment_date"/>
		<collection property="mbr_id" resultMap="magazineCommentMemberMap"></collection>
	</resultMap>
	<resultMap id="magazineCommentMemberMap" type="edu.bit.ex.vo.MbrVO">
		<result property="mbr_id" column="mbr_id"/>
	</resultMap>	
	<select id="getMagazineComment" resultMap="magazineContentCommentMap">
		SELECT c.comment_id, c.comment_content, c.comment_date 
		FROM board_comment c, mbr m, board b 
		WHERE c.mbr_id = m.mbr_id AND 
		    c.board_id = b.board_id AND 
		    b.board_id = #{board_id} 
		ORDER BY c.comment_id DESC, c.comment_date DESC
	</select>
	
	<!-- 매거진 게시글 댓글 작성(스프링 시큐리티 적용시 mbr_id 변경 적용할 것) -->
	<insert id="setMagazineCommentWrite">
	<![CDATA[
		INSERT INTO board_comment (comment_id, board_id, mbr_id, comment_content) 
		VALUES (board_comment_seq.nextval, #{board_id}, #{mbr_id}, #{comment_content}) 
	]]>
	</insert>
	
	<!-- 매거진 수정 -->
	<update id="setMagazineModify">
	<![CDATA[
		UPDATE board SET board_name = #{board_name}, board_content = #{board_content} WHERE board_id = #{board_id}
	]]>
	</update>
</mapper>